{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1100af0e-0390-4773-8e9b-00e9fbca9e2d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7223140457388908\n"
     ]
    }
   ],
   "source": [
    "# reading\n",
    "import pandas as pd\n",
    "url = \"https://drive.google.com/file/d/1Uaa3K9Nh1LmKacFHnieBILj2LI6bjcfM/view?usp=share_link\"\n",
    "path = 'https://drive.google.com/uc?export=download&id='+url.split('/')[-2]\n",
    "housing = pd.read_csv(path)\n",
    "\n",
    "\n",
    "# train test split\n",
    "from sklearn.model_selection import train_test_split\n",
    "X = housing.drop(columns=\"SalePrice\")\n",
    "y = housing[\"SalePrice\"]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=8)\n",
    "\n",
    "# pipeline\n",
    "from sklearn.pipeline import make_pipeline\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "pipe = make_pipeline(\n",
    "        SimpleImputer(strategy='median'),\n",
    "        StandardScaler(),\n",
    "        KNeighborsRegressor())\n",
    "\n",
    "# parameter grid for pipeline\n",
    "pipe_params = {\n",
    "    'simpleimputer__strategy':['median', 'mean'],\n",
    "    'standardscaler__with_mean':[True, False],\n",
    "    'kneighborsregressor__n_neighbors': list(range(1, 20)),\n",
    "    'kneighborsregressor__weights': ['uniform', 'distance'],\n",
    "    'kneighborsregressor__p': [1, 2],\n",
    "    'kneighborsregressor__algorithm': ['ball_tree', 'kd_tree', 'brute']}\n",
    "\n",
    "# grid search\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "trained_pipe = GridSearchCV(pipe,\n",
    "                            pipe_params,\n",
    "                            cv = 5)\n",
    "trained_pipe.fit(X_train, y_train)\n",
    "\n",
    "# test accuracy on the test set\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "y_pred = trained_pipe.predict(X_test)\n",
    "\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(r2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "80213f59-07f4-4e0f-9747-5407363000be",
   "metadata": {},
   "outputs": [],
   "source": [
    "# store the trained pipeline\n",
    "import pickle\n",
    "pickle.dump(trained_pipe,\n",
    "            open(file='pipe_knn.sav',\n",
    "                 mode='wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "532937bd-d3cf-4a1a-a3c6-b0ea36f9e5fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import pickle\n",
    "model = pickle.load(open('pipe_knn.sav', 'rb'))\n",
    "\n",
    "import pandas as pd\n",
    "new_house = pd.DataFrame({\n",
    "    'LotArea':[9000],\n",
    "    'TotalBsmtSF':[1000],\n",
    "    'BedroomAbvGr':[5],\n",
    "    'GarageCars':[4]\n",
    "})\n",
    "\n",
    "prediction = model.predict(new_house)\n",
    "\n",
    "#st.write(\"The price of the house is:\", prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3ee144a9-f64a-4380-8116-8f1d4a02aaeb",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-09-23 16:31:41.299 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run /Users/valeriiasatsiuk/anaconda3/lib/python3.10/site-packages/ipykernel_launcher.py [ARGUMENTS]\n"
     ]
    }
   ],
   "source": [
    "import streamlit as st\n",
    "\n",
    "st.title(\"Housing Prices Prediction\")\n",
    "\n",
    "st.write(\"\"\"\n",
    "### Project description\n",
    "We have trained several models to predict the price of a house based on features such as the area of the house and the condition and quality of their different rooms.\n",
    "\n",
    "\"\"\")\n",
    "\n",
    "\n",
    "import pickle\n",
    "model = pickle.load(open('pipe_knn.sav', 'rb'))\n",
    "\n",
    "LotArea = st.number_input(\"Lot Area\")\n",
    "TotalBsmtSF = st.number_input(\"Basement Square Feet\")\n",
    "BedroomAbvGr = st.number_input(\"Number of Bedrooms\")\n",
    "GarageCars = st.number_input(\"Car spaces in Garage\")\n",
    "\n",
    "import pandas as pd\n",
    "new_house = pd.DataFrame({\n",
    "    'LotArea':[LotArea],\n",
    "    'TotalBsmtSF':[TotalBsmtSF],\n",
    "    'BedroomAbvGr':[BedroomAbvGr],\n",
    "    'GarageCars':[GarageCars]\n",
    "})\n",
    "\n",
    "st.write(\"The price of the house is:\", prediction)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
